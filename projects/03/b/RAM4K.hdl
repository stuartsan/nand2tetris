// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out hold the value
 * stored at the memory location specified by address. If load=1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out after the next time step.)
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh);

    RAM512(in=in, address=address[0..8], load=oa, out=oa1);
    RAM512(in=in, address=address[0..8], load=ob, out=ob1);
    RAM512(in=in, address=address[0..8], load=oc, out=oc1);
    RAM512(in=in, address=address[0..8], load=od, out=od1);
    RAM512(in=in, address=address[0..8], load=oe, out=oe1);
    RAM512(in=in, address=address[0..8], load=of, out=of1);
    RAM512(in=in, address=address[0..8], load=og, out=og1);
    RAM512(in=in, address=address[0..8], load=oh, out=oh1);
	   
    Mux8Way16(sel=address[9..11], a=oa1, b=ob1, c=oc1, d=od1, e=oe1, f=of1, g=og1, h=oh1, out=out);
}