// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    /** Initializes the keyboard. */
    function void init() {
        return;
    } 

    /**
     * Returns the ASCII code (as char) of the currently pressed key,
     * or 0 if no key is currently pressed.
     * Recognizes all ASCII characters, as well as the following extension
     * of action keys:
     * New line = 128 = String.newline()
     * Backspace = 129 = String.backspace()
     * Left Arrow = 130
     * Up Arrow = 131
     * Right Arrow = 132
     * Down Arrow = 133
     * Home = 134
     * End = 135
     * Page Up = 136
     * Page Down = 137
     * Insert = 138
     * Delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var int key;

        let key = Memory.peek(24576);

        if (key) {
            return key;
        }

        return 0;
    }

    /**                             
     * Reads the next character from the keyboard.
     * waits until a key is pressed and then released, then echoes
     * the key to the screen, and returns the value of the pressed key.
     */
    function char readChar() {
        var int key;

        while (Keyboard.keyPressed() = false) {
            //Do nothing!
        }

        let key = Keyboard.keyPressed();
        while (~(Keyboard.keyPressed() = false)) {
            //Again do nothing!
        }
        do Output.printChar(key);
        return key;
    }

    /**                             
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its value.
     */
    function String readLine(String message) {
        var String s;
        var int c;
        
        do Output.printString(message);
        
        let s = String.new(100);
        let c = Keyboard.readChar();

        while(~(c = 128)) {  //newline
            if (c = 129) {   //backspace
                do s.eraseLastChar();
            }
            else {
                do s.appendChar(c);
            }
            let c = Keyboard.readChar();
        }
        return s;
    } 

    /**                             
     * Prints the message on the screen, reads the next line
     * (until a newline character) from the keyboard, and returns its
     * integer value (until the first non numeric character).
     */
    function int readInt(String message) {
        var String s;

        let s = Keyboard.readLine(message);
        return s.intValue();
    }
}
